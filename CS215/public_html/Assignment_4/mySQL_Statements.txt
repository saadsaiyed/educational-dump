/********************* 1) CREATING TABLES ************************/

CREATE TABLE User_Table (
	User_ID INT NOT NULL AUTO_INCREMENT,
	First_Name VARCHAR (50) NOT NULL,
	Last_Name VARCHAR (50) NOT NULL,
	Username VARCHAR (50) NOT NULL,
	E_mail VARCHAR (50) NOT NULL,
	Password VARCHAR (50) NOT NULL,
	Is_LogedIn BOOL NOT NULL,
	Avtar VARCHAR (50),
	PRIMARY KEY (User_ID) 
	);
	
CREATE TABLE Movie_Table(
	Movie_ID INT NOT NULL AUTO_INCREMENT,
	Movie_Name VARCHAR (50) NOT NULL,
	Release_Date DATETIME NOT NULL,
	Rating INT,
	Poster VARCHAR (50),Poster, 
	Director VARCHAR (50),
	Cast VARCHAR (50),
	Wiki_Link VARCHAR (50),
	Genre_ID INT NOT NULL,
	Origin_ID INT NOT NULL,
	PRIMARY KEY (Movie_ID),
	FOREIGN KEY (Genre_ID) REFERENCES Gener (Genre_ID),
	FOREIGN KEY (Origin_ID) REFERENCES Origin (Origin_ID)
	);
	
CREATE TABLE Watchlist_Table(
	Watchlist_ID INT NOT NULL AUTO_INCREMENT,
	User_ID INT NOT NULL,
	Watchlist_Name VARCHAR(50) NOT NULL,
	Create_Time DATETIME NOT NULL,
	PRIMARY KEY (Watchlist_ID),
	FOREIGN KEY (User_ID) REFERENCES User_Table (User_ID)
	);

CREATE TABLE Bridge(
	Movie_ID INT NOT NULL,
	Watchlist_ID INT NOT NULL,
	Add_Time DATETIME NOT NULL,
	PRIMARY KEY (Movie_ID, Watchlist_ID),
	FOREIGN KEY (Movie_ID) REFERENCES Movie_Table (Movie_ID),
	FOREIGN KEY (Watchlist_ID) REFERENCES Watchlist_Table (Watchlist_ID)
	);

CREATE TABLE View_Table(
	Movie_ID INT NOT NULL,
	User_ID INT NOT NULL,
	User_Rating INT,
	Rate_Time DATETIME NOT NULL,
	Watch_Time DATETIME NOT NULL,
	Is_Watched BOOL,
	PRIMARY KEY (Movie_ID, User_ID),
	FOREIGN KEY (Movie_ID) REFERENCES Movie_Table (Movie_ID),
	FOREIGN KEY (User_ID) REFERENCES User_Table (User_ID)
	);

CREATE TABLE Genre_Table(
	Genre_ID INT NOT NULL AUTO_INCREMENT,
	Genre_Name VARCHAR(50) NOT NULL,
	PRIMARY KEY (Genre_ID)
	);
	
CREATE TABLE Origin_Table(
	Origin_ID INT NOT NULL AUTO_INCREMENT,
	Origin_Name VARCHAR(50) NOT NULL,
	PRIMARY KEY (Origin_ID)
	);

/********************* 2. Data Storage Queries ************************/

A)	UPDATE User_Table
	SET isLogedIn = true 
	WHERE userID = 1;
	
	UPDATE User_Table
	SET isLogedIn = false 
	WHERE userID = 1;
	
B)  INSERT INTO User_Table
	(First_Name, Last_Name, Username, E_mail, Password, Is_LogedIn, Avtar)
	VALUES
	("Swagger", "Soul", "sas162", "sas162@uregina.ca", "Shutdown@123",  false, "Avtar_URL");

C)	UPDATE View_Table
	SET User_Rating = 8, Rate_Time = (STR_TO_DATE('2019-11-30','%Y-%m-%d'))
	WHERE User_ID = 1 and Movie_ID = 1;

	UPDATE View_Table
	SET Is_Watched = true, Watch_Time = (STR_TO_DATE('2018-11-25','%Y-%m-%d'))
	WHERE User_ID = 1 and Movie_ID = 1;
		
D)	INSERT INTO Watchlist_Table
	(User_ID, Watchlist_Name, Create_Time)
	VALUES
	(1,"Top 5", (STR_TO_DATE('2019-11-29','%Y-%m-%d')));

E)	INSERT INTO Movie_Watchlist_Bridge
	(Movie_ID, Watchlist_ID, Add_Time)
	VALUES
	(1, 1, (STR_TO_DATE('2019-11-29','%Y-%m-%d')));

/**************** 3) DATA RETRIEVAL QUERIES ***************************/

A)	SELECT User_ID, Username, Avtar
	FROM User_Table
	WHERE Password = "Shutdown@123" and Username = "sas162";


B)	SELECT Movie_Name, Movie_ID, Poster, Rating
	FROM Movie_Table
	ORDER BY Rating DESC
	LIMIT 15;

	SELECT Movie_Name, Movie_ID, Poster, Rating
	FROM Movie_Table
	ORDER BY Release_Date DESC
	LIMIT 15;

	SELECT Movie_Name, Movie_ID, Poster, Rating
	FROM Movie_Table
	ORDER BY Movie_Name ASC
	LIMIT 15;

	SELECT Movie_Name, Movie_ID, Poster, Rating
	FROM Movie_Table
	WHERE Movie_Name
	LIKE "%T%";

	SELECT  M.Movie_Name, M.Movie_ID, M.Poster, M.Rating
	FROM Movie_Table M, Genre_Table G
	WHERE M.Genre_ID = G.Genre_ID and G.Genre_Name = "American";
	ORDER BY M.Rating DESC
	LIMIT 15;

	SELECT  M.Movie_Name, M.Movie_ID, M.Poster, M.Rating
	FROM Movie_Table M, Origin_Table O
	WHERE M.Origin_ID = O.Origin_ID and O.Origin_Name = "American";
	ORDER BY M.Rating DESC
	LIMIT 15;

C) 	SELECT M.Movie_Name, M.Poster, G.Genre_Name, O.Origin_Name, M.Rating, M.Cast, M.Director, M.Wiki_Link
	FROM Movie_Table M, Genre_Table G, Origin_Table O
	WHERE M.Movie_ID = 12 and M.Genre_ID = G.Genre_ID and M.Origin_ID = O.Origin_ID;

D)	SELECT Watchlist_Name
	FROM Watchlist_Table
	ORDER BY Create_Time DESC;

E)	SELECT M.Movie_Name, B.Movie_ID, M.Rating
	FROM Movie_Watchlist_Bridge B, Movie_Table M
	WHERE M.Movie_ID = B.Movie_ID
	ORDER BY Add_Time DESC;
	
TRUNCATE TABLE User_Table;
TRUNCATE TABLE Watchlist_Table;
TRUNCATE TABLE View_Table;
TRUNCATE TABLE Bridge;
